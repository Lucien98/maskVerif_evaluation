inlining done in 0.000
(i1_22, i2_22, i3_22, i4_22, i5_22, i6_22, i7_22, i8_22)
(i1_32, i2_32, i3_32, i4_32, i5_32, i6_32, i7_32, i8_32)
(i1_42, i2_42, i3_42, i4_42, i5_42, i6_42, i7_42, i8_42)
(i1_52, i2_52, i3_52, i4_52, i5_52, i6_52, i7_52, i8_52)
(c10, c20, c30, c40, c50, c60, c70, c80)
(i1_200, i2_200, i3_200, i4_200, i5_200, i6_200, i7_200, i8_200)
(i1_300, i2_300, i3_300, i4_300, i5_300, i6_300, i7_300, i8_300)
(i1_400, i2_400, i3_400, i4_400, i5_400, i6_400, i7_400, i8_400)
(i1_500, i2_500, i3_500, i4_500, i5_500, i6_500, i7_500, i8_500)
(c11, c21, c31, c41, c51, c61, c71, c81)
(i1_210, i2_210, i3_210, i4_210, i5_210, i6_210, i7_210, i8_210)
(i1_310, i2_310, i3_310, i4_310, i5_310, i6_310, i7_310, i8_310)
(i1_410, i2_410, i3_410, i4_410, i5_410, i6_410, i7_410, i8_410)
(i1_510, i2_510, i3_510, i4_510, i5_510, i6_510, i7_510, i8_510)
(c12, c22, c32, c42, c52, c62, c72, c82)
after derandomize:
Current goal

Type variables: <none>

------------------------------------------------------------------------
Context : Mult.refresh3_r

pre = true

(  1)  r12 <$ Byte.distr                                                           
(  2)  r22 <$ Byte.distr                                                           
(  3)  r32 <$ Byte.distr                                                           
(  4)  r42 <$ Byte.distr                                                           
(  5)  r52 <$ Byte.distr                                                           
(  6)  r62 <$ Byte.distr                                                           
(  7)  r72 <$ Byte.distr                                                           
(  8)  r82 <$ Byte.distr                                                           
(  9)  r100 <$ Byte.distr                                                          
( 10)  r200 <$ Byte.distr                                                          
( 11)  r300 <$ Byte.distr                                                          
( 12)  r400 <$ Byte.distr                                                          
( 13)  r500 <$ Byte.distr                                                          
( 14)  r600 <$ Byte.distr                                                          
( 15)  r700 <$ Byte.distr                                                          
( 16)  r800 <$ Byte.distr                                                          
( 17)  r110 <$ Byte.distr                                                          
( 18)  r210 <$ Byte.distr                                                          
( 19)  r310 <$ Byte.distr                                                          
( 20)  r410 <$ Byte.distr                                                          
( 21)  r510 <$ Byte.distr                                                          
( 22)  r610 <$ Byte.distr                                                          
( 23)  r710 <$ Byte.distr                                                          
( 24)  r810 <$ Byte.distr                                                          
( 25)  a10 <- a1                                                                   
( 26)  a20 <- a2                                                                   
( 27)  a30 <- a3                                                                   
( 28)  a40 <- a4                                                                   
( 29)  a50 <- a5                                                                   
( 30)  a60 <- a6                                                                   
( 31)  a70 <- a7                                                                   
( 32)  a80 <- a8                                                                   
( 33)  r1 <- r12                                                                   
( 34)  r2 <- r22                                                                   
( 35)  r3 <- r32                                                                   
( 36)  r4 <- r42                                                                   
( 37)  r5 <- r52                                                                   
( 38)  r6 <- r62                                                                   
( 39)  r7 <- r72                                                                   
( 40)  r8 <- r82                                                                   
( 41)  (i1_2, i2_2, i3_2, i4_2, i5_2, i6_2, i7_2, i8_2) <-                         
(   )    (r1, r2, r3, r4, r5, r6, r7, r8)                                          
( 42)  (i1_22, i2_22, i3_22, i4_22, i5_22, i6_22, i7_22, i8_22) <-                 
(   )    (i1_2, i2_2, i3_2, i4_2, i5_2, i6_2, i7_2, i8_2)                          
( 43)  (i1_3, i2_3, i3_3, i4_3, i5_3, i6_3, i7_3, i8_3) <-                         
(   )    (r8, r1, r2, r3, r4, r5, r6, r7)                                          
( 44)  (i1_32, i2_32, i3_32, i4_32, i5_32, i6_32, i7_32, i8_32) <-                 
(   )    (i1_3, i2_3, i3_3, i4_3, i5_3, i6_3, i7_3, i8_3)                          
( 45)  (i1_4, i2_4, i3_4, i4_4, i5_4, i6_4, i7_4, i8_4) <-                         
(   )    ((a10 + i1_2)%Byte.ComRing, (a20 + i2_2)%Byte.ComRing,                    
(   )     (a30 + i3_2)%Byte.ComRing, (a40 + i4_2)%Byte.ComRing,                    
(   )     (a50 + i5_2)%Byte.ComRing, (a60 + i6_2)%Byte.ComRing,                    
(   )     (a70 + i7_2)%Byte.ComRing, (a80 + i8_2)%Byte.ComRing)                    
( 46)  (i1_42, i2_42, i3_42, i4_42, i5_42, i6_42, i7_42, i8_42) <-                 
(   )    (i1_4, i2_4, i3_4, i4_4, i5_4, i6_4, i7_4, i8_4)                          
( 47)  (i1_5, i2_5, i3_5, i4_5, i5_5, i6_5, i7_5, i8_5) <-                         
(   )    ((i1_4 + i1_3)%Byte.ComRing, (i2_4 + i2_3)%Byte.ComRing,                  
(   )     (i3_4 + i3_3)%Byte.ComRing, (i4_4 + i4_3)%Byte.ComRing,                  
(   )     (i5_4 + i5_3)%Byte.ComRing, (i6_4 + i6_3)%Byte.ComRing,                  
(   )     (i7_4 + i7_3)%Byte.ComRing, (i8_4 + i8_3)%Byte.ComRing)                  
( 48)  (i1_52, i2_52, i3_52, i4_52, i5_52, i6_52, i7_52, i8_52) <-                 
(   )    (i1_5, i2_5, i3_5, i4_5, i5_5, i6_5, i7_5, i8_5)                          
( 49)  (c1, c2, c3, c4, c5, c6, c7, c8) <-                                         
(   )    (i1_5, i2_5, i3_5, i4_5, i5_5, i6_5, i7_5, i8_5)                          
( 50)  (c10, c20, c30, c40, c50, c60, c70, c80) <- (c1, c2, c3, c4, c5, c6, c7, c8)
( 51)  a11 <- c1                                                                   
( 52)  a21 <- c2                                                                   
( 53)  a31 <- c3                                                                   
( 54)  a41 <- c4                                                                   
( 55)  a51 <- c5                                                                   
( 56)  a61 <- c6                                                                   
( 57)  a71 <- c7                                                                   
( 58)  a81 <- c8                                                                   
( 59)  r10 <- r100                                                                 
( 60)  r20 <- r200                                                                 
( 61)  r30 <- r300                                                                 
( 62)  r40 <- r400                                                                 
( 63)  r50 <- r500                                                                 
( 64)  r60 <- r600                                                                 
( 65)  r70 <- r700                                                                 
( 66)  r80 <- r800                                                                 
( 67)  (i1_20, i2_20, i3_20, i4_20, i5_20, i6_20, i7_20, i8_20) <-                 
(   )    (r10, r20, r30, r40, r50, r60, r70, r80)                                  
( 68)  (i1_200, i2_200, i3_200, i4_200, i5_200, i6_200, i7_200, i8_200) <-         
(   )    (i1_20, i2_20, i3_20, i4_20, i5_20, i6_20, i7_20, i8_20)                  
( 69)  (i1_30, i2_30, i3_30, i4_30, i5_30, i6_30, i7_30, i8_30) <-                 
(   )    (r80, r10, r20, r30, r40, r50, r60, r70)                                  
( 70)  (i1_300, i2_300, i3_300, i4_300, i5_300, i6_300, i7_300, i8_300) <-         
(   )    (i1_30, i2_30, i3_30, i4_30, i5_30, i6_30, i7_30, i8_30)                  
( 71)  (i1_40, i2_40, i3_40, i4_40, i5_40, i6_40, i7_40, i8_40) <-                 
(   )    ((a11 + i1_20)%Byte.ComRing, (a21 + i2_20)%Byte.ComRing,                  
(   )     (a31 + i3_20)%Byte.ComRing, (a41 + i4_20)%Byte.ComRing,                  
(   )     (a51 + i5_20)%Byte.ComRing, (a61 + i6_20)%Byte.ComRing,                  
(   )     (a71 + i7_20)%Byte.ComRing, (a81 + i8_20)%Byte.ComRing)                  
( 72)  (i1_400, i2_400, i3_400, i4_400, i5_400, i6_400, i7_400, i8_400) <-         
(   )    (i1_40, i2_40, i3_40, i4_40, i5_40, i6_40, i7_40, i8_40)                  
( 73)  (i1_50, i2_50, i3_50, i4_50, i5_50, i6_50, i7_50, i8_50) <-                 
(   )    ((i1_40 + i1_30)%Byte.ComRing, (i2_40 + i2_30)%Byte.ComRing,              
(   )     (i3_40 + i3_30)%Byte.ComRing, (i4_40 + i4_30)%Byte.ComRing,              
(   )     (i5_40 + i5_30)%Byte.ComRing, (i6_40 + i6_30)%Byte.ComRing,              
(   )     (i7_40 + i7_30)%Byte.ComRing, (i8_40 + i8_30)%Byte.ComRing)              
( 74)  (i1_500, i2_500, i3_500, i4_500, i5_500, i6_500, i7_500, i8_500) <-         
(   )    (i1_50, i2_50, i3_50, i4_50, i5_50, i6_50, i7_50, i8_50)                  
( 75)  (c1, c2, c3, c4, c5, c6, c7, c8) <-                                         
(   )    (i1_50, i2_50, i3_50, i4_50, i5_50, i6_50, i7_50, i8_50)                  
( 76)  (c11, c21, c31, c41, c51, c61, c71, c81) <- (c1, c2, c3, c4, c5, c6, c7, c8)
( 77)  a12 <- c1                                                                   
( 78)  a22 <- c2                                                                   
( 79)  a32 <- c3                                                                   
( 80)  a42 <- c4                                                                   
( 81)  a52 <- c5                                                                   
( 82)  a62 <- c6                                                                   
( 83)  a72 <- c7                                                                   
( 84)  a82 <- c8                                                                   
( 85)  r11 <- r110                                                                 
( 86)  r21 <- r210                                                                 
( 87)  r31 <- r310                                                                 
( 88)  r41 <- r410                                                                 
( 89)  r51 <- r510                                                                 
( 90)  r61 <- r610                                                                 
( 91)  r71 <- r710                                                                 
( 92)  r81 <- r810                                                                 
( 93)  (i1_21, i2_21, i3_21, i4_21, i5_21, i6_21, i7_21, i8_21) <-                 
(   )    (r11, r21, r31, r41, r51, r61, r71, r81)                                  
( 94)  (i1_210, i2_210, i3_210, i4_210, i5_210, i6_210, i7_210, i8_210) <-         
(   )    (i1_21, i2_21, i3_21, i4_21, i5_21, i6_21, i7_21, i8_21)                  
( 95)  (i1_31, i2_31, i3_31, i4_31, i5_31, i6_31, i7_31, i8_31) <-                 
(   )    (r81, r11, r21, r31, r41, r51, r61, r71)                                  
( 96)  (i1_310, i2_310, i3_310, i4_310, i5_310, i6_310, i7_310, i8_310) <-         
(   )    (i1_31, i2_31, i3_31, i4_31, i5_31, i6_31, i7_31, i8_31)                  
( 97)  (i1_41, i2_41, i3_41, i4_41, i5_41, i6_41, i7_41, i8_41) <-                 
(   )    ((a12 + i1_21)%Byte.ComRing, (a22 + i2_21)%Byte.ComRing,                  
(   )     (a32 + i3_21)%Byte.ComRing, (a42 + i4_21)%Byte.ComRing,                  
(   )     (a52 + i5_21)%Byte.ComRing, (a62 + i6_21)%Byte.ComRing,                  
(   )     (a72 + i7_21)%Byte.ComRing, (a82 + i8_21)%Byte.ComRing)                  
( 98)  (i1_410, i2_410, i3_410, i4_410, i5_410, i6_410, i7_410, i8_410) <-         
(   )    (i1_41, i2_41, i3_41, i4_41, i5_41, i6_41, i7_41, i8_41)                  
( 99)  (i1_51, i2_51, i3_51, i4_51, i5_51, i6_51, i7_51, i8_51) <-                 
(   )    ((i1_41 + i1_31)%Byte.ComRing, (i2_41 + i2_31)%Byte.ComRing,              
(   )     (i3_41 + i3_31)%Byte.ComRing, (i4_41 + i4_31)%Byte.ComRing,              
(   )     (i5_41 + i5_31)%Byte.ComRing, (i6_41 + i6_31)%Byte.ComRing,              
(   )     (i7_41 + i7_31)%Byte.ComRing, (i8_41 + i8_31)%Byte.ComRing)              
(100)  (i1_510, i2_510, i3_510, i4_510, i5_510, i6_510, i7_510, i8_510) <-         
(   )    (i1_51, i2_51, i3_51, i4_51, i5_51, i6_51, i7_51, i8_51)                  
(101)  (c1, c2, c3, c4, c5, c6, c7, c8) <-                                         
(   )    (i1_51, i2_51, i3_51, i4_51, i5_51, i6_51, i7_51, i8_51)                  
(102)  (c12, c22, c32, c42, c52, c62, c72, c82) <- (c1, c2, c3, c4, c5, c6, c7, c8)

post = true

length f_args = 8
wp computed in 0.004
Start i = 7
Start output = 6, internal = 1 
Start output = 5, internal = 2 
Start output = 4, internal = 3 
Start output = 3, internal = 4 
Start output = 2, internal = 5 
Start output = 1, internal = 6 
Start output = 0, internal = 7 
SNI
TIME: 21.527

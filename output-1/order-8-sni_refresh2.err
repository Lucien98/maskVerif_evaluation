inlining done in 0.000
(i1_21, i2_21, i3_21, i4_21, i5_21, i6_21, i7_21, i8_21, i9_21)
(i1_31, i2_31, i3_31, i4_31, i5_31, i6_31, i7_31, i8_31, i9_31)
(i1_41, i2_41, i3_41, i4_41, i5_41, i6_41, i7_41, i8_41, i9_41)
(i1_51, i2_51, i3_51, i4_51, i5_51, i6_51, i7_51, i8_51, i9_51)
(c10, c20, c30, c40, c50, c60, c70, c80, c90)
(i1_200, i2_200, i3_200, i4_200, i5_200, i6_200, i7_200, i8_200, i9_200)
(i1_300, i2_300, i3_300, i4_300, i5_300, i6_300, i7_300, i8_300, i9_300)
(i1_400, i2_400, i3_400, i4_400, i5_400, i6_400, i7_400, i8_400, i9_400)
(i1_500, i2_500, i3_500, i4_500, i5_500, i6_500, i7_500, i8_500, i9_500)
(c11, c21, c31, c41, c51, c61, c71, c81, c91)
after derandomize:
Current goal

Type variables: <none>

------------------------------------------------------------------------
Context : Mult.refresh2_r

pre = true

( 1)  r11 <$ Byte.distr                                                          
( 2)  r21 <$ Byte.distr                                                          
( 3)  r31 <$ Byte.distr                                                          
( 4)  r41 <$ Byte.distr                                                          
( 5)  r51 <$ Byte.distr                                                          
( 6)  r61 <$ Byte.distr                                                          
( 7)  r71 <$ Byte.distr                                                          
( 8)  r81 <$ Byte.distr                                                          
( 9)  r91 <$ Byte.distr                                                          
(10)  r100 <$ Byte.distr                                                         
(11)  r200 <$ Byte.distr                                                         
(12)  r300 <$ Byte.distr                                                         
(13)  r400 <$ Byte.distr                                                         
(14)  r500 <$ Byte.distr                                                         
(15)  r600 <$ Byte.distr                                                         
(16)  r700 <$ Byte.distr                                                         
(17)  r800 <$ Byte.distr                                                         
(18)  r900 <$ Byte.distr                                                         
(19)  a10 <- a1                                                                  
(20)  a20 <- a2                                                                  
(21)  a30 <- a3                                                                  
(22)  a40 <- a4                                                                  
(23)  a50 <- a5                                                                  
(24)  a60 <- a6                                                                  
(25)  a70 <- a7                                                                  
(26)  a80 <- a8                                                                  
(27)  a90 <- a9                                                                  
(28)  r1 <- r11                                                                  
(29)  r2 <- r21                                                                  
(30)  r3 <- r31                                                                  
(31)  r4 <- r41                                                                  
(32)  r5 <- r51                                                                  
(33)  r6 <- r61                                                                  
(34)  r7 <- r71                                                                  
(35)  r8 <- r81                                                                  
(36)  r9 <- r91                                                                  
(37)  (i1_2, i2_2, i3_2, i4_2, i5_2, i6_2, i7_2, i8_2, i9_2) <-                  
(  )    (r1, r2, r3, r4, r5, r6, r7, r8, r9)                                     
(38)  (i1_21, i2_21, i3_21, i4_21, i5_21, i6_21, i7_21, i8_21, i9_21) <-         
(  )    (i1_2, i2_2, i3_2, i4_2, i5_2, i6_2, i7_2, i8_2, i9_2)                   
(39)  (i1_3, i2_3, i3_3, i4_3, i5_3, i6_3, i7_3, i8_3, i9_3) <-                  
(  )    (r9, r1, r2, r3, r4, r5, r6, r7, r8)                                     
(40)  (i1_31, i2_31, i3_31, i4_31, i5_31, i6_31, i7_31, i8_31, i9_31) <-         
(  )    (i1_3, i2_3, i3_3, i4_3, i5_3, i6_3, i7_3, i8_3, i9_3)                   
(41)  (i1_4, i2_4, i3_4, i4_4, i5_4, i6_4, i7_4, i8_4, i9_4) <-                  
(  )    ((a10 + i1_2)%Byte.ComRing, (a20 + i2_2)%Byte.ComRing,                   
(  )     (a30 + i3_2)%Byte.ComRing, (a40 + i4_2)%Byte.ComRing,                   
(  )     (a50 + i5_2)%Byte.ComRing, (a60 + i6_2)%Byte.ComRing,                   
(  )     (a70 + i7_2)%Byte.ComRing, (a80 + i8_2)%Byte.ComRing,                   
(  )     (a90 + i9_2)%Byte.ComRing)                                              
(42)  (i1_41, i2_41, i3_41, i4_41, i5_41, i6_41, i7_41, i8_41, i9_41) <-         
(  )    (i1_4, i2_4, i3_4, i4_4, i5_4, i6_4, i7_4, i8_4, i9_4)                   
(43)  (i1_5, i2_5, i3_5, i4_5, i5_5, i6_5, i7_5, i8_5, i9_5) <-                  
(  )    ((i1_4 + i1_3)%Byte.ComRing, (i2_4 + i2_3)%Byte.ComRing,                 
(  )     (i3_4 + i3_3)%Byte.ComRing, (i4_4 + i4_3)%Byte.ComRing,                 
(  )     (i5_4 + i5_3)%Byte.ComRing, (i6_4 + i6_3)%Byte.ComRing,                 
(  )     (i7_4 + i7_3)%Byte.ComRing, (i8_4 + i8_3)%Byte.ComRing,                 
(  )     (i9_4 + i9_3)%Byte.ComRing)                                             
(44)  (i1_51, i2_51, i3_51, i4_51, i5_51, i6_51, i7_51, i8_51, i9_51) <-         
(  )    (i1_5, i2_5, i3_5, i4_5, i5_5, i6_5, i7_5, i8_5, i9_5)                   
(45)  (c1, c2, c3, c4, c5, c6, c7, c8, c9) <-                                    
(  )    (i1_5, i2_5, i3_5, i4_5, i5_5, i6_5, i7_5, i8_5, i9_5)                   
(46)  (c10, c20, c30, c40, c50, c60, c70, c80, c90) <-                           
(  )    (c1, c2, c3, c4, c5, c6, c7, c8, c9)                                     
(47)  a11 <- c1                                                                  
(48)  a21 <- c2                                                                  
(49)  a31 <- c3                                                                  
(50)  a41 <- c4                                                                  
(51)  a51 <- c5                                                                  
(52)  a61 <- c6                                                                  
(53)  a71 <- c7                                                                  
(54)  a81 <- c8                                                                  
(55)  a91 <- c9                                                                  
(56)  r10 <- r100                                                                
(57)  r20 <- r200                                                                
(58)  r30 <- r300                                                                
(59)  r40 <- r400                                                                
(60)  r50 <- r500                                                                
(61)  r60 <- r600                                                                
(62)  r70 <- r700                                                                
(63)  r80 <- r800                                                                
(64)  r90 <- r900                                                                
(65)  (i1_20, i2_20, i3_20, i4_20, i5_20, i6_20, i7_20, i8_20, i9_20) <-         
(  )    (r10, r20, r30, r40, r50, r60, r70, r80, r90)                            
(66)  (i1_200, i2_200, i3_200, i4_200, i5_200, i6_200, i7_200, i8_200, i9_200) <-
(  )    (i1_20, i2_20, i3_20, i4_20, i5_20, i6_20, i7_20, i8_20, i9_20)          
(67)  (i1_30, i2_30, i3_30, i4_30, i5_30, i6_30, i7_30, i8_30, i9_30) <-         
(  )    (r90, r10, r20, r30, r40, r50, r60, r70, r80)                            
(68)  (i1_300, i2_300, i3_300, i4_300, i5_300, i6_300, i7_300, i8_300, i9_300) <-
(  )    (i1_30, i2_30, i3_30, i4_30, i5_30, i6_30, i7_30, i8_30, i9_30)          
(69)  (i1_40, i2_40, i3_40, i4_40, i5_40, i6_40, i7_40, i8_40, i9_40) <-         
(  )    ((a11 + i1_20)%Byte.ComRing, (a21 + i2_20)%Byte.ComRing,                 
(  )     (a31 + i3_20)%Byte.ComRing, (a41 + i4_20)%Byte.ComRing,                 
(  )     (a51 + i5_20)%Byte.ComRing, (a61 + i6_20)%Byte.ComRing,                 
(  )     (a71 + i7_20)%Byte.ComRing, (a81 + i8_20)%Byte.ComRing,                 
(  )     (a91 + i9_20)%Byte.ComRing)                                             
(70)  (i1_400, i2_400, i3_400, i4_400, i5_400, i6_400, i7_400, i8_400, i9_400) <-
(  )    (i1_40, i2_40, i3_40, i4_40, i5_40, i6_40, i7_40, i8_40, i9_40)          
(71)  (i1_50, i2_50, i3_50, i4_50, i5_50, i6_50, i7_50, i8_50, i9_50) <-         
(  )    ((i1_40 + i1_30)%Byte.ComRing, (i2_40 + i2_30)%Byte.ComRing,             
(  )     (i3_40 + i3_30)%Byte.ComRing, (i4_40 + i4_30)%Byte.ComRing,             
(  )     (i5_40 + i5_30)%Byte.ComRing, (i6_40 + i6_30)%Byte.ComRing,             
(  )     (i7_40 + i7_30)%Byte.ComRing, (i8_40 + i8_30)%Byte.ComRing,             
(  )     (i9_40 + i9_30)%Byte.ComRing)                                           
(72)  (i1_500, i2_500, i3_500, i4_500, i5_500, i6_500, i7_500, i8_500, i9_500) <-
(  )    (i1_50, i2_50, i3_50, i4_50, i5_50, i6_50, i7_50, i8_50, i9_50)          
(73)  (c1, c2, c3, c4, c5, c6, c7, c8, c9) <-                                    
(  )    (i1_50, i2_50, i3_50, i4_50, i5_50, i6_50, i7_50, i8_50, i9_50)          
(74)  (c11, c21, c31, c41, c51, c61, c71, c81, c91) <-                           
(  )    (c1, c2, c3, c4, c5, c6, c7, c8, c9)                                     

post = true

length f_args = 9
wp computed in 0.000
Start i = 8
Start output = 7, internal = 1 
Start output = 6, internal = 2 
Start output = 5, internal = 3 
Start output = 4, internal = 4 
NOT SNI
TIME: 28.327
